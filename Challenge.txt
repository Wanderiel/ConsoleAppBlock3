B3P1 - Дан двумерный массив. Вычислить сумму второй строки и произведение первого 
	столбца. Вывести исходную матрицу и результаты вычислений.

B3P2 - Найти наибольший элемент матрицы A(10,10) и записать ноль в те ячейки, где 
	он находятся. Вывести наибольший элемент, исходную и полученную матрицу.
	Массив под измененную версию не нужен.

B3P3 - Дан одномерный массив целых чисел из 30 элементов.
	Найдите все локальные максимумы и вывести их. (Элемент является локальным 
	максимумом, если он больше своих соседей)
	Крайний элемент является локальным максимумом, если он больше своего соседа.
	Программа должна работать с массивом любого размера.
	Массив всех локальных максимумов не нужен.

B3P4 - Пользователь вводит числа, и программа их запоминает.
	Как только пользователь введёт команду sum, программа выведет сумму всех 
	веденных чисел. Выход из программы должен происходить только в том случае, 
	если пользователь введет команду exit.
	Если введено не sum и не exit, значит это число и его надо добавить в массив.
	Программа должна работать на основе расширения массива.
	Внимание, нельзя использовать List<T> и Array.Resize

B3P5 - В массиве чисел найдите самый длинный подмассив из одинаковых чисел.
	Дано 30 чисел. Вывести в консоль сам массив, число, которое само больше раз 
	повторяется подряд и количество повторений.
	Дополнительный массив не надо создавать.
	Пример: {5, 5, 9, 9, 9, 5, 5} - число 9 повторяется большее число раз подряд.

B3P6 - Дан массив чисел (минимум 10 чисел). Надо вывести в консоль числа отсортированы, 
	от меньшего до большего. Нельзя использовать Array.Sort. Можно найти подходящий 
	алгоритм сортировки и использовать его для задачи.

B3P7 - Дана строка с текстом, используя метод строки String.Split() получить массив 
	слов, которые разделены пробелом в тексте и вывести массив, каждое слово с новой 
	строки.

B3P8 - Дан массив чисел. Нужно его сдвинуть циклически на указанное пользователем 
	значение позиций влево, не используя других массивов. Пример для сдвига один раз: 
	{1, 2, 3, 4} => {2, 3, 4, 1}